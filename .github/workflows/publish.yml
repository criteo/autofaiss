name: Release

on:
  push:
    branches:
    - master
  pull_request:
    branches:
    - master
jobs:
  build-pex:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        python-version: [3.8]
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install setuptools wheel twine pex
    - name: Build pex
      run: |
        make build-pex
        mv autofaiss.pex autofaiss-${{ matrix.python-version }}.pex
    - uses: actions/upload-artifact@v2
      with:
        name: autofaiss_pex
        path: autofaiss-${{ matrix.python-version }}.pex
  deploy:
    needs: build-pex
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
    - uses: actions-ecosystem/action-regex-match@v2
      id: regex-match
      with:
        text: ${{ github.event.head_commit.message }}
        regex: '^Release ([^ ]+)'
    - name: Download pex
      uses: actions/download-artifact@v2
      with:
        name: autofaiss_pex
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.8'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install setuptools wheel twine
    - name: Release
      if: ${{ steps.regex-match.outputs.match != '' && github.event_name != 'pull_request' }}
      uses: softprops/action-gh-release@v1
      with:
        files: |
          autofaiss-3.8.pex
        tag_name: ${{ steps.regex-match.outputs.group1 }}
    - name: Build and publish
      if: ${{ steps.regex-match.outputs.match != '' && github.event_name != 'pull_request' }}
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.pypi_password }}
      run: |
        python setup.py sdist bdist_wheel
        twine upload dist/*
